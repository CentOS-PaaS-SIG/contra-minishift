---
# setup minishift
#

- import_tasks: cleanup.yml
  when: run_cleanup|bool == true

- name: Linux pre reqs setup
  block:
    - import_tasks: setup_nested_virt.yml
      when: setup_nested_virt|bool == true
    - import_tasks: install_virtual_reqs.yml
    - import_tasks: install_kvm_plugin.yml
  when: host_os == "linux" and run_prereqs == true

# install homebrew and brew packages
- name: Mac pre req setup
  import_tasks: install_mac_pre_reqs.yml
  when: host_os == "darwin" and run_prereqs == true

- name: setup minishift
  block:
  - name: "Create {{ minishift_dest_dir }} if it doesn't exist"
    file:
      path: "{{ minishift_dest_dir }}"
      state: directory

  - name: "Is minishift binary present in {{ minishift_dest_dir }}"
    stat:
      path: "{{ minishift_bin }}"
    register: minishift_bin_path

  # Install minishift
  - import_tasks: install_minishift_bin.yml
    when: (minishift_bin_path.stat.exists == false) or
          (force_minishift_install|bool == true)

  - name: "Make sure minishift profile {{ profile }} is active"
    shell: "{{ minishift_bin}} profile set {{ profile }}"

  # Set disk size, memory, set Openshift version, skip OpenShift version and release check
  - name: "Set minishift disk-size {{ disk_size }}"
    shell: "{{ minishift_bin }} config set disk-size {{ disk_size }}"

  - name: "Set minishift memory {{ memory }}"
    shell: "{{ minishift_bin }} config set memory {{ memory }}"

  - name: "Set minishift cpus {{ cpus }}"
    shell: "{{ minishift_bin }} config set cpus {{ cpus }}"

  - name: "Set minishift openshift-version to {{ oc_version }}"
    shell: "{{ minishift_bin }} config set openshift-version {{ oc_version }}"

  - name: "Set minishift minishift_insecure_registry"
    shell: "{{ minishift_bin }} config set insecure-registry \"{{ minishift_insecure_registry }}\""
    when: minishift_insecure_registry != ""

  - name: "Set minishift skip-check-openshift-version"
    shell: "{{ minishift_bin }} config set skip-check-openshift-version true"
    when: minishift_version != "v1.12.0"

  - name: "Set minishift skip-check-openshift-release"
    shell: "{{ minishift_bin }} config set skip-check-openshift-release true"
    when: minishift_version != "v1.12.0"

  # Set vm-driver to virtualbox if using a mac
  - name: "Set minishift vm-driver to virtualbox"
    shell: "{{ minishift_bin }} config set vm-driver virtualbox"
    when: host_os == "darwin"

  - name: "Pull down the minishift iso if running minishift locally"
    get_url:
      url: "{{ minishift_iso }}"
      dest: "/tmp/minishift.iso"
      timeout: 120
    when: minishift_external_vm_ip == ""

  - name: "Check if the minishift profile is running"
    shell: "{{ minishift_bin }} status --profile {{ profile }}"
    register: minishift_profile_status
    ignore_errors: yes

  # Initialize minishift locally
  - import_tasks: init_minishift.yml
    when: minishift_external_vm_ip == ""

  # Start minishift on an external VM if configured
  - name: "Initialization of minishift cluster with profile {{ profile }} on an existing VM ip {{ minishift_external_vm_ip }}"
    shell: "{{ minishift_bin }} start --profile {{ profile }} --openshift-version {{ oc_version }} --vm-driver generic --remote-ipaddress {{ minishift_external_vm_ip }} --remote-ssh-user {{ minishift_external_vm_user }} --remote-ssh-key {{ minishift_external_vm_ssh_key_location }}"
    when: ((minishift_profile_status.stdout_lines and minishift_profile_status.stdout_lines[0]|lower == "does not exist") or
          (minishift_profile_status.rc != 0)) and (minishift_external_vm_ip != "")

  when: setup_minishift |bool == true

